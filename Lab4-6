#include <iostream>
#include <cstring>
using namespace std;
class String
{
    char * value;
    int len;
public:
    String(): value(new char [1] {}), len(0) {};
    String( const String &s)
    {
        len = s.len;
        value= new char [len+1];
        for (int i=0; i<=len;i++)
            value[i]=s.value[i];
    }
    String(const char * s)
    {
        len=0;
        while (s[len] !=0) len++;
        value = new char [len+1];
        for (int i=0; i<= len; i++)
            value[i] = s[i];
    }
    friend ostream & operator <<(ostream & outputStream,const String &s)
    {
    return outputStream << s.value;
    }
    friend istream & operator >> (istream & inputStream,const String &s)
    {
        return inputStream >> s.value;
    }
String & operator = (const String & other)
{
    if(this != & other){
        delete[] value;
        len= other.len;
        value = new char [len+1];
        for (int i=0; i<=len;i++) {
            value[i]=other.value[i];
        }
    }
    return *this;
}
String operator-() const
    {
        String ret;
        ret.len=len;
        delete[] ret.value;
        ret.value = new char[len+1];
        for (int i=0; i<len;i++)
        {
            ret.value[i]= value[len-i-1];
        }
            ret.value[len]=0;
            return ret;
        }
          String operator+(const String & other)  
          {
              String res;
              delete[] res.value;
              res.len = this->len+other.len;
              res.value = new char [this->len+other.len];
              int i=0;
              int k;
              for (i=0;i<this->len;i++)
                  res.value[i]=this->value[i];
                  k=1;
                  for (i=0; i<other.len; i++, k++)
                      res.value[k]=other.value[i];
                      return res;
          }
          ~String()
          {
        delete [] value;
    }
};
int main()
{
    String str = "qwerty";
    String str2=str;
    String str3=-str;
    cout << str3 <<endl;
    cin>>str3;
    cout<< str2+str << endl;
    return 0;
}
